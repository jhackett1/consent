[{"/Users/jayehackett/Desktop/consent2/src/App.jsx":"1","/Users/jayehackett/Desktop/consent2/src/pages/Index.jsx":"2","/Users/jayehackett/Desktop/consent2/src/pages/Login.jsx":"3","/Users/jayehackett/Desktop/consent2/src/components/Field.jsx":"4","/Users/jayehackett/Desktop/consent2/src/contexts/authContext.js":"5","/Users/jayehackett/Desktop/consent2/src/index.js":"6"},{"size":435,"mtime":1606692216277,"results":"7","hashOfConfig":"8"},{"size":432,"mtime":1606693038391,"results":"9","hashOfConfig":"8"},{"size":1396,"mtime":1606692908891,"results":"10","hashOfConfig":"8"},{"size":277,"mtime":1606685027861,"results":"11","hashOfConfig":"8"},{"size":410,"mtime":1606673017567,"results":"12","hashOfConfig":"8"},{"size":286,"mtime":1606692250436,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"bmthl4",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jayehackett/Desktop/consent2/src/App.jsx",[],["31","32"],"/Users/jayehackett/Desktop/consent2/src/pages/Index.jsx",[],"/Users/jayehackett/Desktop/consent2/src/pages/Login.jsx",["33"],"import React from \"react\"\nimport { Formik, Form } from \"formik\"\nimport * as Yup from \"yup\"\nimport fetch from \"isomorphic-unfetch\"\nimport Field from \"../components/Field\"\n\nconst schema = Yup.object().shape({\n    email: Yup.string()\n        .required(\"Please enter you email address\")\n        .email('Please give a valid email address'),\n    password: Yup.string()    \n        .required(\"Please enter your password\")\n})\n\nconst Login = () => \n  <>\n    <h1>Log in</h1>\n    <Formik\n        initialValues={{ email: \"jaye.hackett@gmail.com\", password: \"my-password\" }}\n        validationSchema={schema}\n        onSubmit={async values => {\n            try{\n                const res = await fetch(\"/api/auth/login\", {\n                    method: \"POST\",\n                    body: JSON.stringify(values),\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    }\n                })\n                const data = await res.json()\n            } catch(err) {\n            }\n        }}\n    >\n        {({errors, touched}) =>\n            <Form>\n                <Field label=\"Email\" name=\"email\" errors= {touched.email ? errors.email : null}/>\n                <Field label=\"Password\" name=\"password\" errors= {touched.email ? errors.email : null}/>\n\n                <button>Log in</button>\n            </Form>\n        }\n    </Formik>\n  </>\n\nexport default Login",["34","35"],"/Users/jayehackett/Desktop/consent2/src/components/Field.jsx",[],"/Users/jayehackett/Desktop/consent2/src/contexts/authContext.js",["36"],"import React, { useState } from \"react\"\n\nconst AuthContext = React.createContext()\n\nexport const AuthProvider = ({\n    children\n}) => {\n\n    const [user, setUser] = useState(false)\n\n    return (\n        <AuthContext.Provider\n            value={{\n                user: user\n            }}\n        >\n            {children}\n        </AuthContext.Provider>\n    )\n}\n\nexport const AuthConsumer = AuthContext.Consumer",["37","38"],"/Users/jayehackett/Desktop/consent2/src/index.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":30,"column":23,"nodeType":"45","messageId":"46","endLine":30,"endColumn":27},{"ruleId":"39","replacedBy":"47"},{"ruleId":"41","replacedBy":"48"},{"ruleId":"43","severity":1,"message":"49","line":9,"column":18,"nodeType":"45","messageId":"46","endLine":9,"endColumn":25},{"ruleId":"39","replacedBy":"50"},{"ruleId":"41","replacedBy":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar",["52"],["53"],"'setUser' is assigned a value but never used.",["52"],["53"],"no-global-assign","no-unsafe-negation"]
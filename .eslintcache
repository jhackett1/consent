[{"/Users/jayehackett/Desktop/consent2/src/App.jsx":"1","/Users/jayehackett/Desktop/consent2/src/pages/Index.jsx":"2","/Users/jayehackett/Desktop/consent2/src/pages/Login.jsx":"3","/Users/jayehackett/Desktop/consent2/src/components/Field.jsx":"4","/Users/jayehackett/Desktop/consent2/src/index.js":"5","/Users/jayehackett/Desktop/consent2/src/components/Layout.jsx":"6","/Users/jayehackett/Desktop/consent2/src/pages/Projects.jsx":"7","/Users/jayehackett/Desktop/consent2/src/contexts/authContext.js":"8","/Users/jayehackett/Desktop/consent2/src/components/Loader.jsx":"9","/Users/jayehackett/Desktop/consent2/src/contexts/toastContext.js":"10"},{"size":717,"mtime":1606939170498,"results":"11","hashOfConfig":"12"},{"size":1984,"mtime":1606954242502,"results":"13","hashOfConfig":"12"},{"size":2261,"mtime":1606946106550,"results":"14","hashOfConfig":"12"},{"size":549,"mtime":1606946086750,"results":"15","hashOfConfig":"12"},{"size":389,"mtime":1606944353430,"results":"16","hashOfConfig":"12"},{"size":1735,"mtime":1606952572781,"results":"17","hashOfConfig":"12"},{"size":1254,"mtime":1606946422344,"results":"18","hashOfConfig":"12"},{"size":1208,"mtime":1606946568482,"results":"19","hashOfConfig":"12"},{"size":231,"mtime":1606939099093,"results":"20","hashOfConfig":"12"},{"size":884,"mtime":1606945848162,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"bmthl4",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"/Users/jayehackett/Desktop/consent2/src/App.jsx",[],["47","48"],"/Users/jayehackett/Desktop/consent2/src/pages/Index.jsx",["49"],"import React from \"react\"\nimport Helmet from \"react-helmet\"\nimport { Link } from \"react-router-dom\"\nimport { useToast } from \"../contexts/toastContext\"\n\n\nconst Stat = () => \n  <div className=\"ct-stats__item\">\n    <dd className=\"ct-stats__value\">\n      XX\n    </dd>\n    <dt className=\"ct-stats__caption\">\n      Statistic caption\n      <p className=\"ct-stats__subcaption\">In the last 30 days</p>\n    </dt>\n  </div>\n\nconst Index = () => {\n\n  const {popToast} = useToast()\n\n  return(\n    <>\n      <Helmet>\n        <title>Dashboard | Consent</title>\n      </Helmet>\n\n      <dl className=\"ct-stats\">\n        <Stat/>\n        <Stat/>\n        <Stat/>\n      </dl>\n\n      <section className=\"ct-data-chunk\">\n        <header className=\"ct-data-chunk__header\">\n          <h2 className=\"ct-data-chunk__title\">Data chunk <span className=\"ct-data-chunk__count\">(4)</span></h2>\n          <Link to=\"#\" className=\"ct-data-chunk__quick-link\">See all</Link>\n        </header>\n\n        <table className=\"ct-data-chunk__table\">\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Created</th>\n              <th class=\"ct-visually-hidden\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>Avery Trufelman</td>\n              <td>16.10.2020</td>\n              <td>\n                <Link to=\"#\">Edit</Link>\n                <Link to=\"#\">Remove</Link>\n              </td>\n            </tr>\n            <tr>\n              <td>Sean Real</td>\n              <td>16.10.2020</td>\n              <td>\n                <Link to=\"#\">Edit</Link>\n                <Link to=\"#\">Remove</Link>\n              </td>\n            </tr>\n            <tr>\n              <td>Roman Mars</td>\n              <td>16.10.2020</td>\n              <td>\n                <Link to=\"#\">Edit</Link>\n                <Link to=\"#\">Remove</Link>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </section>\n\n    </>\n  )\n}\n\n\nexport default Index","/Users/jayehackett/Desktop/consent2/src/pages/Login.jsx",["50","51","52"],"import React from \"react\"\nimport { Formik, Form } from \"formik\"\nimport * as Yup from \"yup\"\nimport fetch from \"isomorphic-unfetch\"\nimport Field from \"../components/Field\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport logo from \"./logo.svg\"\nimport { Helmet } from \"react-helmet\"\nimport { useAuth } from \"../contexts/authContext\"\n\nconst schema = Yup.object().shape({\n    email: Yup.string()\n        .required(\"Please enter your email address\")\n        .email('Please give a valid email address'),\n    password: Yup.string()    \n        .required(\"Please enter your password\")\n})\n\nconst Login = () => {\n    const history = useHistory()\n    const { user, logIn } = useAuth()\n    \n    return(\n        <div className=\"ct-login\">\n            <Helmet>\n                <title>Sign in | Consent</title>\n            </Helmet>\n            <img src={logo} alt=\"Consent\" className=\"ct-login__logo\"/>\n            <div className=\"ct-login__form-box\">\n                <h1 className=\"ct-login__title\">Sign in</h1>\n                <Formik\n                    initialValues={{ email: \"jaye.hackett@gmail.com\", password: \"my-password\" }}\n                    validationSchema={schema}\n                    onSubmit={async values => {\n                        try{\n                            await logIn(values)\n                        } catch(err) {\n                        }\n                    }}\n                >\n                    {({errors, touched}) =>\n                        <Form>\n                            <Field label=\"Email\" name=\"email\" type=\"email\" errors= {touched.email ? errors.email : null}/>\n                            <Field label=\"Password\" name=\"password\" type=\"password\" errors= {touched.password ? errors.password : null}/>\n        \n                            <button className=\"ct-button\">Log in</button>\n                        </Form>\n                    }\n                </Formik>   \n                <p className=\"ct-login__actions\">\n                    <Link to=\"/\">Register</Link>\n                    <Link to=\"/\">Forgotten password?</Link>\n                </p> \n            </div>\n        \n            <p className=\"ct-login__notice\">Version 0.1 — Thank you for using Consent</p>\n        </div>\n        \n    )\n}\nexport default Login",["53","54"],"/Users/jayehackett/Desktop/consent2/src/components/Field.jsx",[],"/Users/jayehackett/Desktop/consent2/src/index.js",[],"/Users/jayehackett/Desktop/consent2/src/components/Layout.jsx",[],"/Users/jayehackett/Desktop/consent2/src/pages/Projects.jsx",["55"],"import React, { useState, useEffect } from \"react\"\nimport Helmet from \"react-helmet\"\nimport Layout from \"../components/Layout\"\nimport { Route, Link } from \"react-router-dom\"\n\nconst Projects = () => {\n  const [ projects, setProjects ] = useState([])\n\n  useEffect(() => {\n    fetch(\"/api/v1/projects\") \n      .then(res => res.json())\n      .then(data => setProjects(data))\n  }, [])\n\n  return(\n    <>\n      <Helmet>\n        <title>Projects | Consent</title>\n      </Helmet>\n      <header className=\"ct-datapanel__header\">\n        <h1>Projects</h1>\n        <Link className=\"ct-button ct-button--new\" to=\"/projects/new\">New project</Link>\n      </header>\n      \n      <ul className=\"ct-project-list\">\n        {projects.map(project => \n          <li className=\"ct-project-list__item\" key={project.id}>\n            <Link className=\"ct-project-list__link\" to={`/projects/${project.id}`}>\n            <h2>{project.name}</h2>\n            </Link>\n            <p>Example project meta here</p>\n          </li>\n        )}\n      </ul>\n\n      <footer className=\"ct-datapanel__footer\">\n        <p>Version 0.1 — Thank you for using Consent</p>\n      </footer>\n\n      <Route path=\"/projects/new\" exact>\n        ghrjls\n      </Route>\n    </>\n  )\n}\n\nexport default Projects","/Users/jayehackett/Desktop/consent2/src/contexts/authContext.js",[],"/Users/jayehackett/Desktop/consent2/src/components/Loader.jsx",[],"/Users/jayehackett/Desktop/consent2/src/contexts/toastContext.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":20,"column":10,"nodeType":"62","messageId":"63","endLine":20,"endColumn":18},{"ruleId":"60","severity":1,"message":"64","line":4,"column":8,"nodeType":"62","messageId":"63","endLine":4,"endColumn":13},{"ruleId":"60","severity":1,"message":"65","line":20,"column":11,"nodeType":"62","messageId":"63","endLine":20,"endColumn":18},{"ruleId":"60","severity":1,"message":"66","line":21,"column":13,"nodeType":"62","messageId":"63","endLine":21,"endColumn":17},{"ruleId":"56","replacedBy":"67"},{"ruleId":"58","replacedBy":"68"},{"ruleId":"60","severity":1,"message":"69","line":3,"column":8,"nodeType":"62","messageId":"63","endLine":3,"endColumn":14},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'popToast' is assigned a value but never used.","Identifier","unusedVar","'fetch' is defined but never used.","'history' is assigned a value but never used.","'user' is assigned a value but never used.",["70"],["71"],"'Layout' is defined but never used.","no-global-assign","no-unsafe-negation"]
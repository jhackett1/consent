[{"/Users/jayehackett/Desktop/consent2/src/App.jsx":"1","/Users/jayehackett/Desktop/consent2/src/pages/Index.jsx":"2","/Users/jayehackett/Desktop/consent2/src/pages/Login.jsx":"3","/Users/jayehackett/Desktop/consent2/src/components/Field.jsx":"4","/Users/jayehackett/Desktop/consent2/src/contexts/authContext.js":"5","/Users/jayehackett/Desktop/consent2/src/index.js":"6"},{"size":471,"mtime":1606763964451,"results":"7","hashOfConfig":"8"},{"size":432,"mtime":1606693038391,"results":"9","hashOfConfig":"8"},{"size":1997,"mtime":1606764915246,"results":"10","hashOfConfig":"8"},{"size":319,"mtime":1606764253422,"results":"11","hashOfConfig":"8"},{"size":410,"mtime":1606673017567,"results":"12","hashOfConfig":"8"},{"size":286,"mtime":1606692250436,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"bmthl4",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jayehackett/Desktop/consent2/src/App.jsx",[],["30","31"],"/Users/jayehackett/Desktop/consent2/src/pages/Index.jsx",[],"/Users/jayehackett/Desktop/consent2/src/pages/Login.jsx",["32"],"import React from \"react\"\nimport { Formik, Form } from \"formik\"\nimport * as Yup from \"yup\"\nimport fetch from \"isomorphic-unfetch\"\nimport Field from \"../components/Field\"\nimport { Link } from \"react-router-dom\"\nimport logo from \"./logo.svg\"\n\nconst schema = Yup.object().shape({\n    email: Yup.string()\n        .required(\"Please enter you email address\")\n        .email('Please give a valid email address'),\n    password: Yup.string()    \n        .required(\"Please enter your password\")\n})\n\nconst Login = () => \n  <div className=\"ct-login\">\n    <img src={logo} alt=\"Consent\" className=\"ct-login__logo\"/>\n\n    <div className=\"ct-login__form-box\">\n        <h1 className=\"ct-login__title\">Sign in</h1>\n        <Formik\n            initialValues={{ email: \"jaye.hackett@gmail.com\", password: \"my-password\" }}\n            validationSchema={schema}\n            onSubmit={async values => {\n                try{\n                    const res = await fetch(\"/api/auth/login\", {\n                        method: \"POST\",\n                        body: JSON.stringify(values),\n                        headers: {\n                            \"Content-Type\": \"application/json\"\n                        }\n                    })\n                    const data = await res.json()\n                } catch(err) {\n                }\n            }}\n        >\n            {({errors, touched}) =>\n                <Form>\n                    <Field label=\"Email\" name=\"email\" errors= {touched.email ? errors.email : null}/>\n                    <Field label=\"Password\" name=\"password\" errors= {touched.email ? errors.email : null}/>\n\n                    <button className=\"ct-button\">Log in</button>\n                </Form>\n            }\n        </Formik>   \n        <p class=\"ct-login__actions\">\n            <Link href=\"/\">Register</Link>\n            <Link href=\"/\">Forgotten password?</Link>\n        </p> \n    </div>\n\n    <p class=\"ct-login__notice\">Version 0.1 â€” Thank you for using Consent</p>\n  </div>\n\nexport default Login","/Users/jayehackett/Desktop/consent2/src/components/Field.jsx",[],"/Users/jayehackett/Desktop/consent2/src/contexts/authContext.js",["33"],"import React, { useState } from \"react\"\n\nconst AuthContext = React.createContext()\n\nexport const AuthProvider = ({\n    children\n}) => {\n\n    const [user, setUser] = useState(false)\n\n    return (\n        <AuthContext.Provider\n            value={{\n                user: user\n            }}\n        >\n            {children}\n        </AuthContext.Provider>\n    )\n}\n\nexport const AuthConsumer = AuthContext.Consumer",["34","35"],"/Users/jayehackett/Desktop/consent2/src/index.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":35,"column":27,"nodeType":"42","messageId":"43","endLine":35,"endColumn":31},{"ruleId":"40","severity":1,"message":"44","line":9,"column":18,"nodeType":"42","messageId":"43","endLine":9,"endColumn":25},{"ruleId":"36","replacedBy":"45"},{"ruleId":"38","replacedBy":"46"},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'setUser' is assigned a value but never used.",["47"],["48"],"no-global-assign","no-unsafe-negation"]